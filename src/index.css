@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. 
All colors MUST be HSL.
*/

@layer base {
  :root {
    --background: 210 11% 15%;
    --foreground: 0 0% 98%;

    --card: 215 15% 18%;
    --card-foreground: 0 0% 98%;

    --popover: 215 15% 18%;
    --popover-foreground: 0 0% 98%;

    --primary: 20 91% 58%;
    --primary-foreground: 0 0% 98%;
    --primary-glow: 25 85% 65%;

    --secondary: 215 15% 25%;
    --secondary-foreground: 0 0% 90%;

    --muted: 215 15% 20%;
    --muted-foreground: 0 0% 65%;

    --accent: 20 91% 58%;
    --accent-foreground: 0 0% 98%;

    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 98%;

    --border: 215 15% 25%;
    --input: 215 15% 25%;
    --ring: 20 91% 58%;

    --radius: 0.75rem;

    /* Custom brand colors */
    --brand-gradient: linear-gradient(135deg, hsl(20, 91%, 58%), hsl(25, 85%, 55%));
    --brand-glow: 0 0 30px hsl(20, 91%, 58% / 0.3);
    --hero-gradient: linear-gradient(135deg, hsl(210, 11%, 15%), hsl(215, 15%, 18%));
    --service-gradient-1: linear-gradient(135deg, hsl(195, 100%, 50%), hsl(210, 100%, 45%));
    --service-gradient-2: linear-gradient(135deg, hsl(270, 100%, 60%), hsl(290, 100%, 50%));
    --service-gradient-3: linear-gradient(135deg, hsl(120, 60%, 50%), hsl(140, 70%, 45%));
    --service-gradient-4: linear-gradient(135deg, hsl(300, 80%, 60%), hsl(320, 90%, 55%));
    --service-gradient-5: linear-gradient(135deg, hsl(45, 100%, 60%), hsl(60, 90%, 55%));
    --service-gradient-6: linear-gradient(135deg, hsl(240, 80%, 60%), hsl(260, 90%, 55%));
    
    /* Animation variables */
    --transition-smooth: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    --animation-glow: glow 2s ease-in-out infinite alternate;

    --sidebar-background: 215 15% 18%;
    --sidebar-foreground: 0 0% 90%;
    --sidebar-primary: 20 91% 58%;
    --sidebar-primary-foreground: 0 0% 98%;
    --sidebar-accent: 215 15% 25%;
    --sidebar-accent-foreground: 0 0% 90%;
    --sidebar-border: 215 15% 25%;
    --sidebar-ring: 20 91% 58%;
  }

  .dark {
    --background: 210 11% 15%;
    --foreground: 0 0% 98%;

    --card: 215 15% 18%;
    --card-foreground: 0 0% 98%;

    --popover: 215 15% 18%;
    --popover-foreground: 0 0% 98%;

    --primary: 20 91% 58%;
    --primary-foreground: 0 0% 98%;

    --secondary: 215 15% 25%;
    --secondary-foreground: 0 0% 90%;

    --muted: 215 15% 20%;
    --muted-foreground: 0 0% 65%;

    --accent: 20 91% 58%;
    --accent-foreground: 0 0% 98%;

    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 0 0% 98%;

    --border: 215 15% 25%;
    --input: 215 15% 25%;
    --ring: 20 91% 58%;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground;
  }
  
  /* Custom animations */
  @keyframes glow {
    0% {
      box-shadow: 0 0 20px hsl(var(--primary) / 0.5);
    }
    100% {
      box-shadow: 0 0 40px hsl(var(--primary) / 0.8), 0 0 60px hsl(var(--primary) / 0.3);
    }
  }
  
  @keyframes fade-up {
    0% {
      opacity: 0;
      transform: translateY(30px);
    }
    100% {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  .animate-glow {
    animation: glow 2s ease-in-out infinite alternate;
  }
  
  .animate-fade-up {
    animation: fade-up 0.6s ease-out;
  }
  
  /* Smooth scrolling */
  html {
    scroll-behavior: smooth;
  }
  
  /* Line clamp utility */
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  /* Advanced Animations for Modern Effects */
  @keyframes float {
    0%, 100% { transform: translateY(0px); }
    50% { transform: translateY(-10px); }
  }

  @keyframes glow-pulse {
    0%, 100% { 
      box-shadow: 0 0 20px hsl(var(--primary) / 0.3);
    }
    50% { 
      box-shadow: 0 0 40px hsl(var(--primary) / 0.6), 0 0 60px hsl(var(--primary) / 0.4);
    }
  }

  @keyframes magnetic-hover {
    0% { transform: scale(1) rotate(0deg); }
    50% { transform: scale(1.02) rotate(1deg); }
    100% { transform: scale(1.05) rotate(0deg); }
  }

  @keyframes text-shimmer {
    0% { background-position: -200% 0; }
    100% { background-position: 200% 0; }
  }

  /* Animated Text Classes */
  .animated-text.animate {
    opacity: 1;
    transform: translateY(0);
  }

  .split-words.animate span {
    opacity: 1;
    transform: translateY(0);
  }

  .animated-gradient-text.animate {
    animation: text-shimmer 2s ease-in-out infinite;
    background-size: 200% auto;
  }

  .typewriter {
    overflow: hidden;
    border-right: 2px solid hsl(var(--primary));
    white-space: nowrap;
    animation: typing 3s steps(40, end), blink-caret 0.75s step-end infinite;
  }

  @keyframes typing {
    from { width: 0; }
    to { width: 100%; }
  }

  @keyframes blink-caret {
    from, to { border-color: transparent; }
    50% { border-color: hsl(var(--primary)); }
  }

  /* Card Animations */
  .hover-lift {
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .hover-lift:hover {
    transform: translateY(-8px) scale(1.02);
    box-shadow: 0 20px 40px hsl(var(--primary) / 0.15);
  }

  .magnetic-card:hover {
    animation: magnetic-hover 0.6s ease-out;
  }

  /* Stagger Animation */
  .stagger-container > * {
    opacity: 0;
    transform: translateY(30px);
    animation: stagger-fade-up 0.6s ease-out forwards;
  }

  .stagger-container > *:nth-child(1) { animation-delay: 0.1s; }
  .stagger-container > *:nth-child(2) { animation-delay: 0.2s; }
  .stagger-container > *:nth-child(3) { animation-delay: 0.3s; }
  .stagger-container > *:nth-child(4) { animation-delay: 0.4s; }
  .stagger-container > *:nth-child(5) { animation-delay: 0.5s; }
  .stagger-container > *:nth-child(6) { animation-delay: 0.6s; }

  @keyframes stagger-fade-up {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Glassmorphism */
  .glass-card {
    background: rgba(255, 255, 255, 0.05);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.1);
  }

  .dark .glass-card {
    background: rgba(0, 0, 0, 0.3);
    border: 1px solid rgba(255, 255, 255, 0.05);
  }

  /* Modern Grid Layouts */
  .masonry-grid {
    column-count: 3;
    column-gap: 1.5rem;
    break-inside: avoid;
  }

  @media (max-width: 1024px) {
    .masonry-grid {
      column-count: 2;
    }
  }

  @media (max-width: 640px) {
    .masonry-grid {
      column-count: 1;
    }
  }

  .masonry-item {
    break-inside: avoid;
    margin-bottom: 1.5rem;
  }

  /* ReactBits-inspired Background Effects */
  /* Aurora Effect - Multi-layer implementation */
  .aurora-layer-1 {
    position: absolute;
    inset: -20%;
    background: conic-gradient(
      from 0deg at 30% 70%, 
      transparent,
      var(--aurora-color-1),
      var(--aurora-color-2),
      transparent,
      var(--aurora-color-3),
      transparent
    );
    filter: blur(80px);
    opacity: var(--aurora-blend);
    animation: aurora-wave-1 var(--aurora-speed) ease-in-out infinite;
    mix-blend-mode: screen;
  }

  .aurora-layer-2 {
    position: absolute;
    inset: -30%;
    background: conic-gradient(
      from 180deg at 70% 30%, 
      transparent,
      var(--aurora-color-2),
      transparent,
      var(--aurora-color-1),
      var(--aurora-color-3),
      transparent
    );
    filter: blur(100px);
    opacity: var(--aurora-blend);
    animation: aurora-wave-2 var(--aurora-speed) ease-in-out infinite reverse;
    mix-blend-mode: screen;
  }

  .aurora-layer-3 {
    position: absolute;
    inset: -40%;
    background: radial-gradient(
      ellipse 800px 400px at 50% 100%,
      var(--aurora-color-3),
      transparent 70%
    ), radial-gradient(
      ellipse 600px 300px at 20% 0%,
      var(--aurora-color-1),
      transparent 70%
    ), radial-gradient(
      ellipse 700px 350px at 80% 100%,
      var(--aurora-color-2),
      transparent 70%
    );
    filter: blur(120px);
    opacity: var(--aurora-blend);
    animation: aurora-wave-3 var(--aurora-speed) ease-in-out infinite;
    mix-blend-mode: plus-lighter;
  }

  @keyframes aurora-wave-1 {
    0%, 100% {
      transform: rotate(0deg) scale(1) translate(0%, 0%);
      border-radius: 60% 40% 30% 70%;
    }
    25% {
      transform: rotate(45deg) scale(1.1) translate(10%, -5%);
      border-radius: 40% 60% 60% 40%;
    }
    50% {
      transform: rotate(90deg) scale(0.9) translate(-5%, 10%);
      border-radius: 70% 30% 40% 60%;
    }
    75% {
      transform: rotate(135deg) scale(1.05) translate(-10%, -10%);
      border-radius: 30% 70% 70% 30%;
    }
  }

  @keyframes aurora-wave-2 {
    0%, 100% {
      transform: rotate(180deg) scale(1.2) translate(5%, 5%);
      border-radius: 50% 50% 40% 60%;
    }
    33% {
      transform: rotate(240deg) scale(0.8) translate(-10%, 15%);
      border-radius: 40% 60% 50% 50%;
    }
    66% {
      transform: rotate(300deg) scale(1.1) translate(15%, -10%);
      border-radius: 60% 40% 50% 50%;
    }
  }

  @keyframes aurora-wave-3 {
    0%, 100% {
      transform: scale(1) translate(0%, 0%) rotate(0deg);
      opacity: calc(var(--aurora-blend) * 0.8);
    }
    50% {
      transform: scale(1.3) translate(5%, -5%) rotate(180deg);
      opacity: calc(var(--aurora-blend) * 1.2);
    }
  }

  .fluid-gradient {
    position: absolute;
    inset: -50%;
    background: conic-gradient(
      from 0deg,
      var(--fluid-color-1),
      var(--fluid-color-2),
      var(--fluid-color-3),
      var(--fluid-color-1)
    );
    filter: blur(var(--fluid-blur));
    animation: fluid-rotate var(--fluid-speed) linear infinite;
  }

  @keyframes fluid-rotate {
    0% {
      transform: rotate(0deg) scale(1);
    }
    50% {
      transform: rotate(180deg) scale(1.2);
    }
    100% {
      transform: rotate(360deg) scale(1);
    }
  }

  .orb-effect {
    position: absolute;
    top: 50%;
    left: 50%;
    width: var(--orb-size);
    height: var(--orb-size);
    background: radial-gradient(
      circle at 30% 30%,
      var(--orb-color),
      transparent 70%
    );
    border-radius: 50%;
    filter: blur(20px);
    transform: translate(-50%, -50%);
    animation: orb-float 8s ease-in-out infinite;
    transition: all 0.3s ease;
  }

  .orb-effect-hover {
    transform: translate(-50%, -50%) scale(var(--orb-hover-scale));
    animation: orb-distort 2s ease-in-out infinite;
  }

  @keyframes orb-float {
    0%, 100% {
      transform: translate(-50%, -50%) translateY(0px);
    }
    50% {
      transform: translate(-50%, -50%) translateY(-20px);
    }
  }

  @keyframes orb-distort {
    0%, 100% {
      border-radius: 50%;
    }
    25% {
      border-radius: 60% 40% 60% 40%;
    }
    50% {
      border-radius: 40% 60% 40% 60%;
    }
    75% {
      border-radius: 55% 45% 55% 45%;
    }
  }

  .particle {
    position: absolute;
    left: var(--particle-x);
    top: var(--particle-y);
    width: var(--particle-size);
    height: var(--particle-size);
    background: var(--particle-color);
    border-radius: 50%;
    opacity: 0.6;
    animation: particle-float var(--particle-duration) linear infinite;
    animation-delay: var(--particle-delay);
  }

  @keyframes particle-float {
    0% {
      transform: translateY(0px) translateX(0px);
      opacity: 0;
    }
    10% {
      opacity: 0.6;
    }
    90% {
      opacity: 0.6;
    }
    100% {
      transform: translateY(-100vh) translateX(20px);
      opacity: 0;
    }
  }

  .mesh-gradient {
    position: absolute;
    inset: -100%;
    background: radial-gradient(
        circle at 20% 50%,
        var(--mesh-color-1) 0%,
        transparent 50%
      ),
      radial-gradient(
        circle at 80% 20%,
        var(--mesh-color-2) 0%,
        transparent 50%
      ),
      radial-gradient(
        circle at 40% 80%,
        var(--mesh-color-3) 0%,
        transparent 50%
      ),
      radial-gradient(
        circle at 90% 70%,
        var(--mesh-color-4) 0%,
        transparent 50%
      );
    filter: blur(40px);
    animation: mesh-morph var(--mesh-speed) ease-in-out infinite;
  }

  @keyframes mesh-morph {
    0%, 100% {
      transform: scale(1) rotate(0deg);
    }
    33% {
      transform: scale(1.1) rotate(120deg);
    }
    66% {
      transform: scale(0.9) rotate(240deg);
    }
  }

  .dot-grid-pattern {
    width: 100%;
    height: 100%;
    background-image: radial-gradient(
      circle at center,
      var(--dot-color) var(--dot-size),
      transparent var(--dot-size)
    );
    background-size: var(--dot-spacing) var(--dot-spacing);
    animation: dot-pulse 4s ease-in-out infinite;
  }

  @keyframes dot-pulse {
    0%, 100% {
      opacity: 0.3;
    }
    50% {
      opacity: 0.8;
    }
  }
}
